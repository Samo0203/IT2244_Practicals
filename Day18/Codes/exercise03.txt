//Exercise 03
//The parent creates a child process
//The child creates a grandchild process
//The grand child sleeps 2 seconds and exit with status 2
//The child waits for the grandchild, prints its exit status, then exits with status 55

#include <stdio.h>
#include <unistd.h>
#include <stdlib.h>
#include <sys/wait.h>

int main() {
    pid_t child, grandchild;
    int status;

    child = fork();
    if (child == 0) {
        // Child process
        printf("Child process started\n");

        grandchild = fork();
        if (grandchild == 0) {
            // Grandchild process
            printf("Grandchild process started\n");
			printf("Sleeping for 2 seconds...\n");
            sleep(2);
            printf("Grandchild exiting with status 2\n");
            exit(2);
        } else {
            // Child waits for grandchild using wait()
            wait(&status);
            printf("Child: Grandchild exited with status %d\n", WEXITSTATUS(status));

            printf("Child exiting with status 55\n");
            exit(55);
        }
    } else {
        // Parent waits for child using wait()
        wait(&status);
        printf("Parent: Child exited with status %d\n", WEXITSTATUS(status));

        printf("Parent process ending.\n");
    }

    return 0;
}
